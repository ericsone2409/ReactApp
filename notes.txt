HERRAMIENTAS:
- Standard: es una linterna para tus archivos js que no te deja usar semicolons. 
install: npm install --global standard
usage: standard

- NPM script: es para correr 'build process' a traves de atajos mediante 'npm run (nombre del shorcut)'
estos shorcuts los defines adentro del archivo package.json, con un objeto llamado:
"scripts": {
	"lint": "standard",
}
asi que se ejecuta corriendo 'npm run lint'

- Webpack: es algo parecido al grunt
install: npm install --global webpack
usage: webpack (nombre dle primer archivo que es el central de tu app) (nombre del archivo de salida que es el que linkeas a tu html)

- Babel: eso se utiliza para transformar todo es6 a es5. Ademas nos permite usar JSX, es decir, babel es en general un transformador.
se tiene que crear un archivo de configuracion en el root del proyecto y se tiene que llamar ".abelrc"
para este caso le diremos a babel a travez de ese archivo que ignore las transformaciones de import y export por que queremos que de eso especificamente se encargue webpack, entonces nuestro archivo de confiruracion quedaria asi:
{
	"presets":[
		"react",
		["es2015", {"modules": false, "loose": true}]
	]
}


//INSTRUCCIONES PARA CORRERLO LA PRIMERA VEZ
- npm install -g yarn

- Despues hacer las instalaciones globales: 
	- npm install -g webpack
	- npm install -g webpack-dev-server

- cierran y abren la consola de nuevo y van al root del proyecto 

- npm run build

- npm run dev

- luego van a 'localhost:8080/' y ya deberian de ver todo bien

//metodos para crear componentes:

- create class component: este metodo se usa cuando tu componente tiene una funcionalidad o algo por el estilo, es decir cuando no es simple html
	ejemplo: 
	const example = React.createClass({
		render () {
			return (
				//tu logica y html va aca
			)
		}
	})

- stateless component: este metodo se usa cuando tu componente es solo html nada de logina ni nada, este metodo puede recibir 'props' tambien
	ejemplo:
	const example = (props) => {
		return (
			//aqui va todo tu html <h1>{props.params.babla}</h1>
		)
	}


//Ciclo para modificar el state de cualquier componente con redux
